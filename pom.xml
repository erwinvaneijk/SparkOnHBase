<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.cloudera</groupId>
	<artifactId>spark-hbase</artifactId>
	<version>0.0.2-stock</version>
	<packaging>jar</packaging>

	<name>Spark HBase Integration</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <hbase.version>1.0.1.1</hbase.version>
        <scala.version>2.11.7</scala.version>
        <scala.short.version>2.11</scala.short.version>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <artifactId>jetty</artifactId>
                <groupId>org.mortbay.jetty</groupId>
                <version>6.1.26</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

	<dependencies>
        <dependency>
            <artifactId>jetty</artifactId>
            <groupId>org.mortbay.jetty</groupId>
            <version>6.1.26</version>
        </dependency>
	    
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-compiler</artifactId>
            <version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.short.version}</artifactId>
			<version>2.2.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.short.version}</artifactId>
			<version>1.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming_${scala.short.version}</artifactId>
			<version>1.4.0</version>
			<type>test-jar</type>
			<classifier>tests</classifier>
			<!-- <scope>test</scope> Return-->
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming_${scala.short.version}</artifactId>
			<version>1.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-client</artifactId>
            <version>${hbase.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-client</artifactId>
            <version>${hbase.version}</version>
			<type>test-jar</type>
			<classifier>tests</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-server</artifactId>
            <version>${hbase.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-server</artifactId>
            <version>${hbase.version}</version>
			<type>test-jar</type>
			<!-- <classifier>tests</classifier> Return-->
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-protocol</artifactId>
            <version>${hbase.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-hadoop2-compat</artifactId>
            <version>${hbase.version}</version>
			<!-- <scope>runtime</scope> --> 
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-hadoop2-compat</artifactId>
            <version>${hbase.version}</version>
			<type>test-jar</type>
			<classifier>tests</classifier>
			<!-- <scope>test</scope> Return-->
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-common</artifactId>
            <version>${hbase.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-common</artifactId>
            <version>${hbase.version}</version>
			<type>test-jar</type>
			<classifier>tests</classifier>
			<!-- <scope>test</scope> Return-->
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-hadoop-compat</artifactId>
            <version>${hbase.version}</version>
			<!-- <scope>test</scope> Return-->
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-hadoop-compat</artifactId>
            <version>${hbase.version}</version>
			<type>test-jar</type>
			<classifier>tests</classifier>
			<!-- <scope>test</scope> Return-->
		</dependency>
	</dependencies>

	<repositories>
        <repository>
            <id>hortonworks</id>
            <name>Hortonworks Repository</name>
            <url>http://repo.Hortonworks.com/content/repositories/releases</url>
        </repository>
		<repository>
			<id>maven-hadoop</id>
			<name>Hadoop Releases</name>
			<url>https://repository.cloudera.com/content/repositories/releases/</url>
		</repository>
	</repositories>

	<build>
		<outputDirectory>target/scala/classes</outputDirectory>
		<testOutputDirectory>target/scala/test-classes</testOutputDirectory>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>2.17</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest-maven-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
					<junitxml>.</junitxml>
					<filereports>WDF TestSuite.txt</filereports>
				</configuration>
				<executions>
					<execution>
						<id>test</id>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

            <plugin>
                <!-- see http://davidb.github.com/scala-maven-plugin -->
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.1.3</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <args>
                                <arg>-dependencyfile</arg>
                                <arg>${project.build.directory}/.scala_dependencies</arg>
                            </args>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<shadedArtifactAttached>false</shadedArtifactAttached>
					<outputFile>target/SparkHBase.jar</outputFile>
					<artifactSet>
						<includes>
							<include>*:*</include>
						</includes>
					</artifactSet>
					<filters>
						<filter>
							<artifact>*:*</artifact>
							<excludes>
								<exclude>META-INF/*.SF</exclude>
								<exclude>META-INF/*.DSA</exclude>
								<exclude>META-INF/*.RSA</exclude>
							</excludes>
						</filter>
					</filters>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>reference.conf</resource>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

 <distributionManagement>
    <repository>
      <id>cdh.releases.repo</id>
      <url>http://maven.jenkins.cloudera.com:8081/artifactory/cdh-staging-local</url>
      <name>CDH Releases Repository</name>
    </repository>
    <snapshotRepository>
      <id>cdh.snapshots.repo</id>
      <url>http://maven.jenkins.cloudera.com:8081/artifactory/cdh-snapshot-local</url>
      <name>CDH Snapshots Repository</name>
    </snapshotRepository>
  </distributionManagement>

</project>
